@use "../../../styles/globals.module.scss" as *;

$itemPadding: 8px 12px;
$itemWidth: calc(100% - 2 * #{nth($itemPadding, 2)});

.title {
  padding: $itemPadding;
  font-size: 20px;
  text-transform: uppercase;
}
.root {
  position: relative;
  display: flex;
  justify-content: center;
  width: max-content;
  z-index: 1;
}
.root[data-orietation="vertical"] {
  flex-direction: column;
  width: 20px;
  height: 100px;
}

.navlist {
  background-color: white;
  padding: 4px;
  border-radius: 6px;
  list-style: none;
  box-shadow: 2px 2px 20px $gray11;
  text-transform: uppercase;
}

.liItem {
  border-bottom: 1px solid $gray11;
}

%commonStyles {
  padding: $itemPadding;
  outline: none;
  user-select: none;
  font-weight: 500;
  line-height: 1;
  border-radius: 4px;
  font-size: 13px;
  color: $dark1;

  &:focus {
    box-shadow: 0 0 0 2px $gray11;
  }

  &:hover {
    background-color: $gray11;
  }
}

.trigger {
  @extend %commonStyles;
  display: flex;
  width: $itemWidth;
  align-items: center;
  justify-content: space-between;
  gap: 2px;
}

.link {
  @extend %commonStyles;
  display: block;
  text-decoration: none;
}

.content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  animation-duration: 250ms;
  animation-timing-function: ease;
}
.content[data-motion="from-start"] {
  animation-name: enterFromLeft;
}
.content[data-motion="from-end"] {
  animation-name: enterFromRight;
}
.content[data-motion="to-start"] {
  animation-name: exitToLeft;
}
.content[data-motion="to-end"] {
  animation-name: exitToRight;
}
@media only screen and (min-width: 600px) {
  .content {
    width: auto;
  }
}

.indicator {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  height: 10px;
  overflow: hidden;
  z-index: 1;
  transition: width, transform 300ms ease;
  right: -20px;
}

.arrow {
  position: relative;
  top: -20%;
  left: 25%;
  background-color: white;
  width: 20px;
  height: 20px;
  transform: rotate(45deg);
  border-bottom-left-radius: 3px;
}

.indicator[data-state="visible"] {
  animation: fadeIn 200ms ease;
}
.indicator[data-state="hidden"] {
  animation: fadeOut 200ms ease;
}

.viewport {
  position: relative;
  transform-origin: top center;
  width: 100%;
  margin-left: 10px;
  background-color: white;
  border-radius: 6px;
  overflow: hidden;
  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px,
    hsl(206 22% 7% / 20%) 0px 10px 20px -15px;
  height: var(--radix-navigation-menu-viewport-height);
  transition: width, height, 300ms ease;
}
.viewport[data-state="open"] {
  animation: scaleIn 200ms ease;
}
.viewport[data-state="closed"] {
  animation: scaleOut 200ms ease;
}
@media only screen and (min-width: 600px) {
  .viewport {
    width: var(--radix-navigation-menu-viewport-width);
  }
}

.List {
  display: grid;
  padding: 22px;
  margin: 0;
  column-gap: 10px;
  list-style: none;
}

.ListItemLink {
  display: block;
  outline: none;
  text-decoration: none;
  user-select: none;
  padding: 12px;
  border-radius: 6px;
  font-size: 15px;
  line-height: 1;
}
.ListItemLink:focus {
  box-shadow: 0 0 0 2px $gray10;
}
.ListItemLink:hover {
  background-color: $gray11;
}

.ListItemHeading {
  font-weight: 500;
  line-height: 1.2;
  margin-bottom: 5px;
  color: $gray1;
}

.ListItemText {
  color: gray2;
  line-height: 1.4;
  font-weight: initial;
}

.Callout {
  display: flex;
  justify-content: flex-end;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, #440044 0%, #aa66aa 100%);
  border-radius: 6px;
  padding: 25px;
  text-decoration: none;
  outline: none;
  user-select: none;
}
.Callout:focus {
  box-shadow: 0 0 0 2px $gray11;
}

.CalloutHeading {
  color: white;
  font-size: 18px;
  font-weight: 500;
  line-height: 1.2;
  margin-top: 16px;
  margin-bottom: 7px;
}

.CalloutText {
  color: $gray2;
  font-size: 14px;
  line-height: 1.3;
}

.ViewportPosition {
  display: flex;
  justify-content: center;
  width: 100%;
  top: 100%;
  left: 0;
  perspective: 2000px;
}

.CaretDown {
  position: relative;
  color: $red0;
  top: 1px;
  transition: transform 250ms ease;
}
[data-state="open"] > .CaretDown {
  transform: rotate(-90deg);
}

@keyframes enterFromRight {
  from {
    opacity: 0;
    transform: translateX(200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(200px);
  }
}

@keyframes exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-200px);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: rotateX(-30deg) scale(0.9);
  }
  to {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
  to {
    opacity: 0;
    transform: rotateX(-10deg) scale(0.95);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
